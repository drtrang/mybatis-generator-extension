package com.github.trang.mybaits.generator.extension.other;

import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;
import org.mybatis.generator.api.dom.java.JavaVisibility;
import org.mybatis.generator.api.dom.java.TopLevelClass;

import java.util.ArrayList;
import java.util.List;

public class AddModelSerializablePlugin extends PluginAdapter {
    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        addInterface(introspectedTable, topLevelClass);
        return true;
    }

    public boolean modelRecordWithBLOBsClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        addInterface(introspectedTable, topLevelClass);
        return true;
    }

    public boolean modelPrimaryKeyClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        addInterface(introspectedTable, topLevelClass);
        return true;
    }

    private void addInterface(IntrospectedTable introspectedTable, TopLevelClass topLevelClass) {
        topLevelClass.addImportedType(new FullyQualifiedJavaType("java.io.Serializable"));
        topLevelClass.addSuperInterface(new FullyQualifiedJavaType("java.io.Serializable"));

        Field field = new Field();
        field.addJavaDocLine("/**");
        field.addJavaDocLine(" * This serialVersionUID field was generated by MyBatis Generator.");
        field.addJavaDocLine(" */");
        field.setVisibility(JavaVisibility.PRIVATE);
        field.setStatic(true);
        field.setFinal(true);
        field.setType(new FullyQualifiedJavaType("long"));
        field.setName("serialVersionUID");

        List<Field> lst = topLevelClass.getFields();
        StringBuilder sb = new StringBuilder();
        for (Field f : lst) {
            sb.append(f.getName()).append("#");
        }
        field.setInitializationString(new StringBuilder().append(sb.toString().hashCode()).append("L").toString());

        List<Field> newLst = new ArrayList<Field>();
        newLst.add(field);
        newLst.addAll(lst);
        lst.clear();
        lst.addAll(newLst);
    }

    public boolean validate(List<String> warnings) {
        return true;
    }
}